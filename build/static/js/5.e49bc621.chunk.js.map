{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","char","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment"],"mappings":"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","file":"static/js/5.e49bc621.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img src={img} alt=\"Error\" style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }} />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, error, request, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=ba8352bbedbd1e3c25d41add04114b02\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map((char) => _transformCharacter(char));\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(url, { method, body, headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setLoading(false);\r\n      return data;\r\n    } catch (e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`${item.id}`}>\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}