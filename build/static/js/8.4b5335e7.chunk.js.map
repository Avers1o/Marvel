{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","char","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x2","getCharactersByName","_ref5","_callee5","name","_context5","_transformCharactersByName","_x3","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","className","avengers","avengersLogo","setContent","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","CSSTransition","timeout","classNames","Link","to","TransitionGroup","component","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/8.4b5335e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img src={img} alt=\"Error\" style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }} />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=ba8352bbedbd1e3c25d41add04114b02\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map((char) => _transformCharacter(char));\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const getCharactersByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?nameStartsWith=${name}&orderBy=name&limit=9&${_apiKey}`);\r\n    return res.data.results.map((char) => _transformCharactersByName(char));\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\",\r\n    };\r\n  };\r\n\r\n  const _transformCharactersByName = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n    };\r\n  };\r\n\r\n  return {\r\n    clearError,\r\n    process,\r\n    setProcess,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    getCharactersByName,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n    setProcess(\"loading\");\r\n\r\n    try {\r\n      const response = await fetch(url, { method, body, headers });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    } catch (e) {\r\n      setProcess(\"error\");\r\n      throw e;\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unecpected process state\");\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { process, setProcess, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <CSSTransition key={i} timeout={500} classNames=\"comics__item\">\n          <li key={i} className=\"comics__item\">\n            <Link to={`${item.id}`}>\n              <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n              <div className=\"comics__item-name\">{item.title}</div>\n              <div className=\"comics__item-price\">{item.price}</div>\n            </Link>\n          </li>\n        </CSSTransition>\n      );\n    });\n\n    return (\n      <ul className=\"comics__grid\">\n        <TransitionGroup component={null}>{items}</TransitionGroup>\n      </ul>\n    );\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}